{"ast":null,"code":"var _jsxFileName = \"/home/ehabsami/Desktop/pharmacy-management-frontend/src/components/MedicationList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { List, ListItem, ListItemText, CircularProgress, Button } from \"@mui/material\";\nimport axiosInstance from \"../api/axiosInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedicationList = ({\n  addToFillForm,\n  medItem\n}) => {\n  _s();\n  const [medications, setMedications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMedications = async () => {\n      try {\n        var _response$data;\n        const response = await axiosInstance.get(\"medications/\");\n        // Ensure that the response is an array, otherwise set an empty array\n        console.log();\n        setMedications(Array.isArray((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.results) ? response.data.results : []);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Failed to fetch medications\", error);\n        setLoading(false);\n      }\n    };\n    fetchMedications();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  if (!medications.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No medications available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this); // Display message if no medications\n  }\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: medications.map(medication => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: medication.name,\n        secondary: `Available Quantity: ${medication.quantity_available}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addToFillForm(medication),\n        children: [(medItem === null || medItem === void 0 ? void 0 : medItem.id) == (medication === null || medication === void 0 ? void 0 : medication.id) ? \"Added\" : \"Add to Request\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, medication.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicationList, \"ck51RcUDRg8OoG6oe8p/jSA/9jE=\");\n_c = MedicationList;\nexport default MedicationList;\nvar _c;\n$RefreshReg$(_c, \"MedicationList\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","ListItemText","CircularProgress","Button","axiosInstance","jsxDEV","_jsxDEV","MedicationList","addToFillForm","medItem","_s","medications","setMedications","loading","setLoading","fetchMedications","_response$data","response","get","console","log","Array","isArray","data","results","error","fileName","_jsxFileName","lineNumber","columnNumber","length","children","map","medication","primary","name","secondary","quantity_available","onClick","id","_c","$RefreshReg$"],"sources":["/home/ehabsami/Desktop/pharmacy-management-frontend/src/components/MedicationList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  CircularProgress,\n  Button,\n} from \"@mui/material\";\nimport axiosInstance from \"../api/axiosInstance\";\n\nconst MedicationList = ({ addToFillForm, medItem }) => {\n  const [medications, setMedications] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMedications = async () => {\n      try {\n        const response = await axiosInstance.get(\"medications/\");\n        // Ensure that the response is an array, otherwise set an empty array\n        console.log();\n        setMedications(\n          Array.isArray(response.data?.results) ? response.data.results : []\n        );\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Failed to fetch medications\", error);\n        setLoading(false);\n      }\n    };\n    fetchMedications();\n  }, []);\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  if (!medications.length) {\n    return <p>No medications available</p>; // Display message if no medications\n  }\n\n  return (\n    <List>\n      {medications.map((medication) => (\n        <ListItem key={medication.id}>\n          <ListItemText\n            primary={medication.name}\n            secondary={`Available Quantity: ${medication.quantity_available}`}\n          />\n          <Button onClick={() => addToFillForm(medication)}>\n            {medItem?.id == medication?.id ? \"Added\" : \"Add to Request\"}{\" \"}\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MedicationList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}