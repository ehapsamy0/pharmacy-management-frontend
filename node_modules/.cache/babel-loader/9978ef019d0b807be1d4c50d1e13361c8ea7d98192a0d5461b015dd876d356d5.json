{"ast":null,"code":"var _jsxFileName = \"/home/ehabsami/Desktop/pharmacy-management-frontend/src/pages/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TextField, Button, Paper, Typography, Box, Checkbox, FormControlLabel } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"../api/axiosInstance\";\nimport Layout from \"../components/Layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isPatient, setIsPatient] = useState(true);\n  const [isPharmacist, setIsPharmacist] = useState(false);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\"); // Clear any previous errors\n\n    try {\n      const response = await axiosInstance.post(\"users/register/\", {\n        username,\n        email,\n        password,\n        is_patient: isPatient,\n        is_pharmacist: isPharmacist\n      });\n      // Navigate to login page or auto-login if needed\n      navigate(\"/login\");\n    } catch (err) {\n      setError(\"Registration failed. Please check your input and try again.\");\n    }\n  };\n  const handleRoleChange = role => {\n    if (role === \"patient\") {\n      setIsPatient(!isPatient);\n      if (isPatient) setIsPharmacist(false); // Ensure one role at a time\n    } else if (role === \"pharmacist\") {\n      setIsPharmacist(!isPharmacist);\n      if (isPharmacist) setIsPatient(false); // Ensure one role at a time\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        maxWidth: 400,\n        mx: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            fullWidth: true,\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            type: \"email\",\n            fullWidth: true,\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true,\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: isPatient,\n              onChange: () => handleRoleChange(\"patient\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 24\n            }, this),\n            label: \"Register as Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: isPharmacist,\n              onChange: () => handleRoleChange(\"pharmacist\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 24\n            }, this),\n            label: \"Register as Pharmacist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"zCwTHvuLaTwK+h5snbm7OayVnfM=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","TextField","Button","Paper","Typography","Box","Checkbox","FormControlLabel","useNavigate","axiosInstance","Layout","jsxDEV","_jsxDEV","Register","_s","username","setUsername","email","setEmail","password","setPassword","isPatient","setIsPatient","isPharmacist","setIsPharmacist","error","setError","navigate","handleSubmit","e","preventDefault","response","post","is_patient","is_pharmacist","err","handleRoleChange","role","children","elevation","sx","p","maxWidth","mx","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","mb","label","fullWidth","value","onChange","target","required","type","control","checked","_c","$RefreshReg$"],"sources":["/home/ehabsami/Desktop/pharmacy-management-frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, Paper, Typography, Box, Checkbox, FormControlLabel } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"../api/axiosInstance\";\nimport Layout from \"../components/Layout\";\n\nfunction Register() {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isPatient, setIsPatient] = useState(true);\n  const [isPharmacist, setIsPharmacist] = useState(false);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\"); // Clear any previous errors\n\n    try {\n      const response = await axiosInstance.post(\"users/register/\", {\n        username,\n        email,\n        password,\n        is_patient: isPatient,\n        is_pharmacist: isPharmacist,\n      });\n      // Navigate to login page or auto-login if needed\n      navigate(\"/login\");\n    } catch (err) {\n      setError(\"Registration failed. Please check your input and try again.\");\n    }\n  };\n\n  const handleRoleChange = (role) => {\n    if (role === \"patient\") {\n      setIsPatient(!isPatient);\n      if (isPatient) setIsPharmacist(false); // Ensure one role at a time\n    } else if (role === \"pharmacist\") {\n      setIsPharmacist(!isPharmacist);\n      if (isPharmacist) setIsPatient(false); // Ensure one role at a time\n    }\n  };\n\n  return (\n    <Layout>\n      <Paper elevation={3} sx={{ p: 3, maxWidth: 400, mx: \"auto\" }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Register\n        </Typography>\n        {error && <Typography color=\"error\">{error}</Typography>}\n        <form onSubmit={handleSubmit}>\n          <Box sx={{ mb: 2 }}>\n            <TextField\n              label=\"Username\"\n              fullWidth\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n          </Box>\n          <Box sx={{ mb: 2 }}>\n            <TextField\n              label=\"Email\"\n              type=\"email\"\n              fullWidth\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </Box>\n          <Box sx={{ mb: 2 }}>\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              fullWidth\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </Box>\n          <Box sx={{ mb: 2 }}>\n            <FormControlLabel\n              control={<Checkbox checked={isPatient} onChange={() => handleRoleChange(\"patient\")} />}\n              label=\"Register as Patient\"\n            />\n            <FormControlLabel\n              control={<Checkbox checked={isPharmacist} onChange={() => handleRoleChange(\"pharmacist\")} />}\n              label=\"Register as Pharmacist\"\n            />\n          </Box>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n            Register\n          </Button>\n        </form>\n      </Paper>\n    </Layout>\n  );\n}\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}