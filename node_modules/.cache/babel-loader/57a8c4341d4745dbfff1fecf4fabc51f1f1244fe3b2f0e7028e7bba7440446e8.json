{"ast":null,"code":"var _jsxFileName = \"/home/ehabsami/Desktop/pharmacy-management-frontend/src/components/PendingRefillRequests.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { List, ListItem, ListItemText, Button, CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PendingRefillRequests = ({\n  userRole,\n  loading,\n  refillRequests,\n  handleFulfill\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: refillRequests.map(request => {\n      var _request$medication, _request$medication2;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `Medication: ${(_request$medication = request.medication) === null || _request$medication === void 0 ? void 0 : _request$medication.name}`,\n          secondary: `Requested by: ${request.patient}, Quantity: ${request === null || request === void 0 ? void 0 : (_request$medication2 = request.medication) === null || _request$medication2 === void 0 ? void 0 : _request$medication2.quantity_requested}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), userRole == \"pharmacist\" && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: request === null || request === void 0 ? void 0 : request.is_fulfilled,\n          color: request !== null && request !== void 0 && request.is_fulfilled ? \"secondary\" : \"primary\",\n          onClick: () => handleFulfill(request.id),\n          children: request !== null && request !== void 0 && request.is_fulfilled ? \"Approved\" : \"Fulfill Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, request.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = PendingRefillRequests;\nexport default PendingRefillRequests;\nvar _c;\n$RefreshReg$(_c, \"PendingRefillRequests\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","ListItemText","Button","CircularProgress","jsxDEV","_jsxDEV","PendingRefillRequests","userRole","loading","refillRequests","handleFulfill","fileName","_jsxFileName","lineNumber","columnNumber","children","map","request","_request$medication","_request$medication2","primary","medication","name","secondary","patient","quantity_requested","variant","disabled","is_fulfilled","color","onClick","id","_c","$RefreshReg$"],"sources":["/home/ehabsami/Desktop/pharmacy-management-frontend/src/components/PendingRefillRequests.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Button,\n  CircularProgress,\n} from \"@mui/material\";\n\nconst PendingRefillRequests = ({\n  userRole,\n  loading,\n  refillRequests,\n  handleFulfill,\n}) => {\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <List>\n      {refillRequests.map((request) => (\n        <ListItem key={request.id}>\n          <ListItemText\n            primary={`Medication: ${request.medication?.name}`}\n            secondary={`Requested by: ${request.patient}, Quantity: ${request?.medication?.quantity_requested}`}\n          />\n          {userRole == \"pharmacist\" && (\n            <Button\n              variant=\"contained\"\n              disabled={request?.is_fulfilled}\n              color={request?.is_fulfilled ? \"secondary\" : \"primary\"}\n              onClick={() => handleFulfill(request.id)}\n            >\n              {request?.is_fulfilled ? \"Approved\" : \"Fulfill Request\"}\n            </Button>\n          )}\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default PendingRefillRequests;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,MAAM,EACNC,gBAAgB,QACX,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,qBAAqB,GAAGA,CAAC;EAC7BC,QAAQ;EACRC,OAAO;EACPC,cAAc;EACdC;AACF,CAAC,KAAK;EACJ,IAAIF,OAAO,EAAE;IACX,oBAAOH,OAAA,CAACF,gBAAgB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7B;EAEA,oBACET,OAAA,CAACN,IAAI;IAAAgB,QAAA,EACFN,cAAc,CAACO,GAAG,CAAEC,OAAO;MAAA,IAAAC,mBAAA,EAAAC,oBAAA;MAAA,oBAC1Bd,OAAA,CAACL,QAAQ;QAAAe,QAAA,gBACPV,OAAA,CAACJ,YAAY;UACXmB,OAAO,EAAE,gBAAAF,mBAAA,GAAeD,OAAO,CAACI,UAAU,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAoBI,IAAI,EAAG;UACnDC,SAAS,EAAE,iBAAiBN,OAAO,CAACO,OAAO,eAAeP,OAAO,aAAPA,OAAO,wBAAAE,oBAAA,GAAPF,OAAO,CAAEI,UAAU,cAAAF,oBAAA,uBAAnBA,oBAAA,CAAqBM,kBAAkB;QAAG;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrG,CAAC,EACDP,QAAQ,IAAI,YAAY,iBACvBF,OAAA,CAACH,MAAM;UACLwB,OAAO,EAAC,WAAW;UACnBC,QAAQ,EAAEV,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,YAAa;UAChCC,KAAK,EAAEZ,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEW,YAAY,GAAG,WAAW,GAAG,SAAU;UACvDE,OAAO,EAAEA,CAAA,KAAMpB,aAAa,CAACO,OAAO,CAACc,EAAE,CAAE;UAAAhB,QAAA,EAExCE,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEW,YAAY,GAAG,UAAU,GAAG;QAAiB;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CACT;MAAA,GAdYG,OAAO,CAACc,EAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAef,CAAC;IAAA,CACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACkB,EAAA,GAhCI1B,qBAAqB;AAkC3B,eAAeA,qBAAqB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}